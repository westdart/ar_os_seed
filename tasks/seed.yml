---
- name: "Assert ..."
  assert:
    that:
      - "ar_os_seed_openshift_content is not none"
      - "ar_os_seed_namespace is not none"
      - "ar_os_seed_config_dest is not none"
      - "ar_os_seed_openshift_login_url is not none"
    msg: "Must include required parameters: ar_os_seed_openshift_login_url, ar_os_seed_config_dest, ar_os_seed_openshift_content, ar_os_seed_namespace"

- name: Login to OpenShift
  include_role:
    name: ar_os_common
    tasks_from: login
  vars:
    ar_os_common_openshift_login_url: "{{ ar_os_seed_openshift_login_url }}"

- name: Check if Namespace exists
  command: "oc get project {{ ar_os_seed_namespace }}"
  register: project_present
  failed_when: false
  changed_when: false

- set_fact:
    _ar_os_seed_create_namespace: true
  when: project_present.rc != 0

- name: Create inventory dirs
  file:
    path: "{{ _ar_os_seed_config_dest_inventory }}/group_vars"
    state: directory

- name: Create seed hosts inventory
  template:
    src: hosts.j2
    dest: "{{ _ar_os_seed_config_dest_inventory }}/hosts"

# Create the seed-hosts
- name: Create seed hosts
  template:
    src: seed-hosts-template.yml.j2
    dest: "{{ _ar_os_seed_config_dest_inventory }}/group_vars/seed-hosts.yml"
  with_items:
    - "{{ app_target_instances }}"
  loop_control:
    loop_var: app_instance

- name: Refresh inventory to ensure seed hosts changes picked up
  meta: refresh_inventory

- name: Clear facts to ensure seed hosts changes picked up
  meta: clear_facts

- name: reload facts
  setup:

- name: Load new group_vars
  include_vars:
    file: "{{ _ar_os_seed_config_dest_inventory }}/group_vars/seed-hosts.yml"
